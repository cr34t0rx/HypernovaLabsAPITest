// <auto-generated />
using System;
using HypernovaLabsAPITest.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace HypernovaLabsAPITest.Migrations
{
    [DbContext(typeof(CarRentalContext))]
    [Migration("20210416044722_HypernovaLabsAPITest.Models.CarRentalContext")]
    partial class HypernovaLabsAPITestModelsCarRentalContext
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.5")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("HypernovaLabsAPITest.Models.Booking", b =>
                {
                    b.Property<int>("BookingID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("BookingDateFrom")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("BookingDateTo")
                        .HasColumnType("datetime2");

                    b.Property<string>("ClientFirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClientLastName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ModelID")
                        .HasColumnType("int");

                    b.Property<int>("TotalDays")
                        .HasColumnType("int");

                    b.Property<int>("TotalPrice")
                        .HasColumnType("int");

                    b.Property<int>("UserID")
                        .HasColumnType("int");

                    b.HasKey("BookingID");

                    b.HasIndex("ModelID");

                    b.HasIndex("UserID");

                    b.ToTable("Bookings");
                });

            modelBuilder.Entity("HypernovaLabsAPITest.Models.Brand", b =>
                {
                    b.Property<int>("BrandID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("BrandName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("BrandID");

                    b.ToTable("Brands");

                    b.HasData(
                        new
                        {
                            BrandID = 1,
                            BrandName = "Ford"
                        },
                        new
                        {
                            BrandID = 2,
                            BrandName = "Chevrolet"
                        },
                        new
                        {
                            BrandID = 3,
                            BrandName = "Tesla"
                        });
                });

            modelBuilder.Entity("HypernovaLabsAPITest.Models.CarModel", b =>
                {
                    b.Property<int>("ModelID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("BrandID")
                        .HasColumnType("int");

                    b.Property<int>("ColorID")
                        .HasColumnType("int");

                    b.Property<string>("ModelName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ModelYear")
                        .HasColumnType("int");

                    b.HasKey("ModelID");

                    b.HasIndex("BrandID");

                    b.HasIndex("ColorID");

                    b.ToTable("CarModels");

                    b.HasData(
                        new
                        {
                            ModelID = 1,
                            BrandID = 1,
                            ColorID = 4,
                            ModelName = "Modelo 1",
                            ModelYear = 2001
                        },
                        new
                        {
                            ModelID = 2,
                            BrandID = 1,
                            ColorID = 2,
                            ModelName = "Modelo 2",
                            ModelYear = 2002
                        },
                        new
                        {
                            ModelID = 3,
                            BrandID = 1,
                            ColorID = 3,
                            ModelName = "Modelo 3",
                            ModelYear = 2003
                        },
                        new
                        {
                            ModelID = 4,
                            BrandID = 1,
                            ColorID = 1,
                            ModelName = "Modelo 4",
                            ModelYear = 2004
                        },
                        new
                        {
                            ModelID = 5,
                            BrandID = 2,
                            ColorID = 4,
                            ModelName = "Modelo 1",
                            ModelYear = 2001
                        },
                        new
                        {
                            ModelID = 6,
                            BrandID = 2,
                            ColorID = 4,
                            ModelName = "Modelo 2",
                            ModelYear = 2002
                        },
                        new
                        {
                            ModelID = 7,
                            BrandID = 2,
                            ColorID = 1,
                            ModelName = "Modelo 3",
                            ModelYear = 2003
                        },
                        new
                        {
                            ModelID = 8,
                            BrandID = 2,
                            ColorID = 1,
                            ModelName = "Modelo 4",
                            ModelYear = 2004
                        },
                        new
                        {
                            ModelID = 9,
                            BrandID = 3,
                            ColorID = 2,
                            ModelName = "Modelo 1",
                            ModelYear = 2001
                        },
                        new
                        {
                            ModelID = 10,
                            BrandID = 3,
                            ColorID = 3,
                            ModelName = "Modelo 2",
                            ModelYear = 2002
                        },
                        new
                        {
                            ModelID = 11,
                            BrandID = 3,
                            ColorID = 4,
                            ModelName = "Modelo 3",
                            ModelYear = 2003
                        },
                        new
                        {
                            ModelID = 12,
                            BrandID = 3,
                            ColorID = 4,
                            ModelName = "Modelo 4",
                            ModelYear = 2004
                        });
                });

            modelBuilder.Entity("HypernovaLabsAPITest.Models.Color", b =>
                {
                    b.Property<int>("ColorID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ColorName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ColorID");

                    b.ToTable("Colors");

                    b.HasData(
                        new
                        {
                            ColorID = 1,
                            ColorName = "Blanco"
                        },
                        new
                        {
                            ColorID = 2,
                            ColorName = "Negro"
                        },
                        new
                        {
                            ColorID = 3,
                            ColorName = "Rojo"
                        },
                        new
                        {
                            ColorID = 4,
                            ColorName = "Azul"
                        });
                });

            modelBuilder.Entity("HypernovaLabsAPITest.Models.Inventory", b =>
                {
                    b.Property<int>("InventoryID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal>("DayPrice")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("ModelID")
                        .HasColumnType("int");

                    b.Property<int>("Total")
                        .HasColumnType("int");

                    b.HasKey("InventoryID");

                    b.HasIndex("ModelID");

                    b.ToTable("Inventories");

                    b.HasData(
                        new
                        {
                            InventoryID = 1,
                            DayPrice = 9.91017914042351m,
                            ModelID = 1,
                            Total = 3
                        },
                        new
                        {
                            InventoryID = 2,
                            DayPrice = 8.85846800364483m,
                            ModelID = 2,
                            Total = 9
                        },
                        new
                        {
                            InventoryID = 3,
                            DayPrice = 1.86569340287973m,
                            ModelID = 3,
                            Total = 3
                        },
                        new
                        {
                            InventoryID = 4,
                            DayPrice = 2.98061566994554m,
                            ModelID = 4,
                            Total = 8
                        },
                        new
                        {
                            InventoryID = 5,
                            DayPrice = 5.24224355409026m,
                            ModelID = 5,
                            Total = 7
                        },
                        new
                        {
                            InventoryID = 6,
                            DayPrice = 3.8172259649342m,
                            ModelID = 6,
                            Total = 9
                        },
                        new
                        {
                            InventoryID = 7,
                            DayPrice = 4.04844861768579m,
                            ModelID = 7,
                            Total = 6
                        },
                        new
                        {
                            InventoryID = 8,
                            DayPrice = 5.7949407294369m,
                            ModelID = 8,
                            Total = 9
                        },
                        new
                        {
                            InventoryID = 9,
                            DayPrice = 0.330675572729984m,
                            ModelID = 9,
                            Total = 1
                        },
                        new
                        {
                            InventoryID = 10,
                            DayPrice = 2.38738872724929m,
                            ModelID = 10,
                            Total = 5
                        },
                        new
                        {
                            InventoryID = 11,
                            DayPrice = 6.58180789872157m,
                            ModelID = 11,
                            Total = 9
                        },
                        new
                        {
                            InventoryID = 12,
                            DayPrice = 2.305686498436m,
                            ModelID = 12,
                            Total = 1
                        });
                });

            modelBuilder.Entity("HypernovaLabsAPITest.Models.User", b =>
                {
                    b.Property<int>("UserID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserID");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("HypernovaLabsAPITest.Models.Booking", b =>
                {
                    b.HasOne("HypernovaLabsAPITest.Models.CarModel", "CarModel")
                        .WithMany()
                        .HasForeignKey("ModelID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("HypernovaLabsAPITest.Models.User", "User")
                        .WithMany()
                        .HasForeignKey("UserID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CarModel");

                    b.Navigation("User");
                });

            modelBuilder.Entity("HypernovaLabsAPITest.Models.CarModel", b =>
                {
                    b.HasOne("HypernovaLabsAPITest.Models.Brand", "Brand")
                        .WithMany("CarModels")
                        .HasForeignKey("BrandID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("HypernovaLabsAPITest.Models.Color", "Color")
                        .WithMany()
                        .HasForeignKey("ColorID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Brand");

                    b.Navigation("Color");
                });

            modelBuilder.Entity("HypernovaLabsAPITest.Models.Inventory", b =>
                {
                    b.HasOne("HypernovaLabsAPITest.Models.CarModel", "CarModel")
                        .WithMany()
                        .HasForeignKey("ModelID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CarModel");
                });

            modelBuilder.Entity("HypernovaLabsAPITest.Models.Brand", b =>
                {
                    b.Navigation("CarModels");
                });
#pragma warning restore 612, 618
        }
    }
}
